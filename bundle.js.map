{"version":3,"sources":["webpack:///webpack/bootstrap 37140b16eb2354d864dc","webpack:///./lib/util.js","webpack:///./lib/moving_object.js","webpack:///./lib/imageable.js","webpack:///./lib/bullet.js","webpack:///./lib/sound_fx.js","webpack:///./lib/enemies/base.js","webpack:///./node_modules/howler/dist/howler.js","webpack:///./lib/app.js","webpack:///./lib/game.js","webpack:///./lib/background.js","webpack:///./lib/enemies/enemy_ships.js","webpack:///./lib/enemies/00_suicider.js","webpack:///./lib/enemies/01_grunt.js","webpack:///(webpack)/buildin/global.js","webpack:///./lib/explosion.js","webpack:///./lib/player.js","webpack:///./lib/ui.js"],"names":["canvasHeight","canvasWidth","checkCollision","obj1","obj2","posY","hitboxH","posX","hitboxW","renderTitleScreen","ctx","fillStyle","font","fillText","formatScore","num","addListeners","game","document","addEventListener","e","keyCode","showTitleScreen","pause","console","log","defaultProps","speedX","speedY","MovingObject","props","newProps","Object","assign","cleanup","images","instance","ImageableSingleton","backgroundImg","Image","src","beams","explosion","enemySuicider","enemyGrunt","playerShip","playerShipR","playerShipL","Bullet","sprite","destroySelf","PlayerBulletBasic","move","drawImage","BasicEnemyBullet","SoundFx","playerBullet","volume","enemyBasicBullet","hit","BaseShip","bullets","filter","bul","settings","muted","muteBtn","querySelector","Howler","mute","bgMusic","autoplay","loop","play","window","localStorage","hiScore","player","onload","run","Enemies","Util","Game","bgCanvas","canvas","UICanvas","canvasContext","getContext","bgContext","UIContext","scores","score","parseInt","bg","ui","showGameOverScreen","paused","enemies","explosions","spawnEnemies","render","push","GruntShip","ship","exp","forEach","playerBullets","bullet","handleBulletHit","deleteBullets","constructor","name","hp","clearRect","clearCanvas","renderGame","requestAnimationFrame","bind","handlePlayerAction","Background","tick","height","Suicider","tickCount","boundY","Math","floor","random","sprites","getSprite","result","abs","fireBullet","antiBumpTechnology","posObj","bulletData","bulletData2","bulletData3","Explosion","pos","size","spriteSheet","i","j","slice","reverse","concat","Player","actions","moveLeft","moveRight","moveUp","moveDown","bulletFx","topSpeed","HP","bulletCooldown","playerController","newBullet","calculateInertia","frame","normalSprite","leftSprite","rightSprite","UI"],"mappings":"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A;AACA;AACA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;AACA,uBAAuB,cAAc;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA,sCAAsC,MAAM;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA,uDAAuD;;AAEvD;AACA;AACA;;AAEA;AACA,6EAA6E;AAC7E;AACA,iDAAiD;AACjD,gDAAgD;AAChD,gDAAgD;AAChD,gDAAgD;AAChD,gDAAgD;AAChD,kDAAkD;AAClD,mDAAmD,uCAAuC,uCAAuC;AACjI,mDAAmD,uCAAuC,uCAAuC;AACjI,kDAAkD;AAClD,kDAAkD;AAClD,kDAAkD;AAClD,qDAAqD,wCAAwC;AAC7F;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC;AACA,uBAAuB,iCAAiC;AACxD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,YAAY;AAC5C,kCAAkC,aAAa;AAC/C,kCAAkC,aAAa;AAC/C,4CAA4C,kBAAkB;AAC9D,4CAA4C,kBAAkB;AAC9D,oCAAoC,cAAc;AAClD,kCAAkC,aAAa;AAC/C,kCAAkC,aAAa;AAC/C,kCAAkC,aAAa;AAC/C,sCAAsC,eAAe;AACrD,kCAAkC,aAAa;AAC/C,kCAAkC,aAAa;AAC/C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,oBAAoB;AACvC;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,KAAK;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,cAAc;AAC9B,gBAAgB,QAAQ;AACxB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,aAAa;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,cAAc;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,aAAa;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,QAAQ;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,SAAS;AACzB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,2BAA2B,IAAI,eAAe;AAC1E;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,SAAS;AACzB,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,SAAS;AACzB,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,MAAM;AACvC;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,MAAM;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA;;AAEA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,eAAe,uBAAuB;AACtC;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,MAAM;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,MAAM;AACtB;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,MAAM;AACtB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,gDAAgD,EAAE;AAC/D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc,KAAK;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,kBAAkB,GAAG;AACrB;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,cAAc,YAAY;AAC1B,cAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,KAAK;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AAAA;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,0CAA0C;AAC7C;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,cAAc;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,MAAM;AAC1C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,aAAa;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,aAAa;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,eAAe;AACrD,gCAAgC,YAAY;AAC5C,gDAAgD,oBAAoB;;AAEpE;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,YAAY;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,WAAW;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,WAAW;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,cAAc;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB,cAAc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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 37140b16eb2354d864dc","export const canvasHeight = 700\nexport const canvasWidth = 450\n\nexport const checkCollision = (obj1, obj2) => {\n  if (obj1.posY + obj1.hitboxH < obj2.posY || obj1.posY > obj2.posY + obj2.hitboxH ||\n    obj1.posX + obj1.hitboxW < obj2.posX || obj1.posX > obj2.posX + obj2.hitboxW) {\n    return false\n  } else {\n    return true\n  }\n}\n\nexport const renderTitleScreen = (ctx) => {\n  ctx.fillStyle = '#ff9e4f'\n  ctx.font = '48px arcadeclassicregular'\n  ctx.fillText('PlasmaForce', 80, 200)\n  ctx.fillStyle = 'white'\n  ctx.font = '30px arcadeclassicregular'\n  ctx.fillText('press enter to start', 80, 350)\n}\n\nexport const formatScore = (num) => {\n  if (num > 999999) {\n    return '999999'\n  } else if (num > 99999) {\n    return num\n  } else if (num > 9999) {\n    return '0' + num\n  } else if (num > 999) {\n    return '00' + num\n  } else if (num > 99) {\n    return '000' + num\n  } else if (num > 9) {\n    return '0000' + num\n  } else {\n    return '00000' + num\n  }\n}\n\nexport const addListeners = (game) => {\n  document.addEventListener('keydown', e => {\n    switch (e.keyCode) {\n      case 13:\n        game.showTitleScreen = false\n        break\n      case 80:\n        game.pause = true\n        break\n      default:\n        console.log(e.keyCode)\n        break\n    }\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/util.js","// This is the 'master' class that every single moving object inherits from\n\nimport ImageableSingleton from './imageable'\n// import {canvasHeight, canvasWidth} from './util'\n\nconst defaultProps = {\n  speedX: 0,\n  speedY: 0,\n  posX: 0,\n  posY: 0\n}\n\nclass MovingObject {\n  constructor (props = {}) {\n    let newProps = Object.assign({}, defaultProps, props)\n    this.speedX = newProps.speedX\n    this.speedY = newProps.speedY\n    this.posX = newProps.posX\n    this.posY = newProps.posY\n    this.cleanup = false\n    this.images = new ImageableSingleton()\n  }\n\n  move () {\n    this.posX += this.speedX\n    this.posY += this.speedY\n  }\n\n  destroySelf () {\n    // mark this object for cleanup so that the game's cleanup function can delete it!\n    this.cleanup = true\n  }\n}\n\nexport default MovingObject\n\n\n\n// WEBPACK FOOTER //\n// ./lib/moving_object.js","/* global Image  */\n\nlet instance = null\n\nclass ImageableSingleton {\n  constructor () {\n    if (!instance) {\n      instance = this\n\n      // scrolling background\n      this.backgroundImg = new Image()\n      this.backgroundImg.src = './assets/background1.jpg'\n\n      // bullets and beam effects\n      this.beams = new Image()\n      this.beams.src = './assets/beams.png'\n      this.explosion = new Image()\n      this.explosion.src = './assets/explosion.png'\n\n      // enemy ships\n      this.enemySuicider = new Image()\n      this.enemySuicider.src = './assets/enemy_suicider.png'\n      this.enemyGrunt = new Image()\n      this.enemyGrunt.src = './assets/enemy_grunt.png'\n\n      // player ship sprite\n      this.playerShip = new Image()\n      this.playerShip.src = './assets/playership.png'\n      this.playerShipR = new Image()\n      this.playerShipR.src = './assets/playership-right.png'\n      this.playerShipL = new Image()\n      this.playerShipL.src = './assets/playership-left.png'\n    }\n\n    return instance\n  }\n}\n\nexport default ImageableSingleton\n\n\n\n// WEBPACK FOOTER //\n// ./lib/imageable.js","import {canvasHeight, canvasWidth} from './util'\nimport MovingObject from './moving_object'\n\nexport class Bullet extends MovingObject {\n  constructor (props) {\n    super(props)\n    this.sprite = this.images.beams\n  }\n\n  move () {\n    this.posX += this.speedX\n    this.posY += this.speedY\n    if (this.posX < 0 || this.posX > canvasWidth || this.posY < 0 || this.posY > canvasHeight) {\n      this.destroySelf()\n    }\n  }\n\n  destroySelf () {\n    // mark this bullet for cleanup so that the game's cleanup function can delete it!\n    this.cleanup = true\n  }\n}\n\nexport class PlayerBulletBasic extends Bullet {\n  constructor (props) {\n    super(props)\n    this.hitboxW = 20\n    this.hitboxH = 40\n  }\n\n  move () {\n    // give bullets a slight spread\n    if (this.posY % 3 === 0 && this.speedX !== 0) {\n      this.posX += this.speedX\n    }\n    this.posY += this.speedY\n    if (this.posX < -20 || this.posX > canvasWidth || this.posY < 0 || this.posY > canvasHeight) {\n      this.destroySelf()\n    }\n  }\n\n  render (ctx) {\n    this.move()\n    ctx.drawImage(this.sprite, 140, 318, 45, 77, this.posX, this.posY, this.hitboxW, this.hitboxH)\n  }\n}\n\nexport class BasicEnemyBullet extends Bullet {\n  constructor (props) {\n    super(props)\n    this.hitboxW = 19\n    this.hitboxH = 19\n  }\n  move () {\n    // give bullets a slight spread\n    this.posX += this.speedX\n    this.posY += this.speedY\n    if (this.posX < -20 || this.posX > canvasWidth || this.posY < 0 || this.posY > canvasHeight) {\n      this.destroySelf()\n    }\n  }\n\n  render (ctx) {\n    this.move()\n    ctx.drawImage(this.sprite, 36, 115, 19, 19, this.posX, this.posY, this.hitboxW, this.hitboxH)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/bullet.js","import { Howl } from 'howler'\n\nconst SoundFx = {\n  playerBullet: new Howl({src: './assets/sound/bullet01.mp3', volume: 0.8}),\n  enemyBasicBullet: new Howl({src: './assets/sound/bullet02.mp3', volume: 0.3}),\n  hit: new Howl({src: './assets/sound/explosion_hit.mp3'}),\n  explosion: new Howl({src: './assets/sound/explosion_big.flac'})\n}\n\nexport default SoundFx\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sound_fx.js","import MovingObject from '../moving_object'\n\n// basic shared ship code can go in here\nclass BaseShip extends MovingObject {\n  constructor (props) {\n    super(props)\n    this.bullets = props.bullets\n  }\n\n  deleteBullets () {\n    this.bullets = this.bullets.filter(bul => !bul.cleanup)\n  }\n\n  antiBumpTechnology () {\n    this.speedX = -this.speedX\n  }\n}\n\nexport default BaseShip\n\n\n\n// WEBPACK FOOTER //\n// ./lib/enemies/base.js","/*!\n *  howler.js v2.0.5\n *  howlerjs.com\n *\n *  (c) 2013-2017, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto iOS enabler.\n      self.mobileAutoEnable = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.value = vol;\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.value = muted ? 0 : self._volume;\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'running' : 'running';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Mobile browsers will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _enableMobileAudio: function() {\n      var self = this || Howler;\n\n      // Only run this on mobile devices if audio isn't already eanbled.\n      var isMobile = /iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk|Mobi/i.test(self._navigator && self._navigator.userAgent);\n      var isTouch = !!(('ontouchend' in window) || (self._navigator && self._navigator.maxTouchPoints > 0) || (self._navigator && self._navigator.msMaxTouchPoints > 0));\n      if (self._mobileEnabled || !self.ctx || (!isMobile && !isTouch)) {\n        return;\n      }\n\n      self._mobileEnabled = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function() {\n        // Fix Android can not play in suspend state.\n        Howler._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._mobileEnabled = true;\n          self.mobileAutoEnable = false;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n        self.ctx.suspend().then(function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        });\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhrWithCredentials = o.xhrWithCredentials || false;\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio on iOS.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.mobileAutoEnable) {\n        Howler._enableMobileAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload) {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        var num = 0;\n        for (var i=0; i<self._sounds.length; i++) {\n          if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n            num++;\n            id = self._sounds[i]._id;\n          }\n        }\n\n        if (num === 1) {\n          sprite = null;\n        } else {\n          id = null;\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Makr this sounded as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          setTimeout(function() {\n            self._emit('play', sound._id);\n          }, 0);\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n      // Update the parameters of the sound\n      sound._paused = false;\n      sound._ended = false;\n      sound._sprite = sprite;\n      sound._seek = seek;\n      sound._start = self._sprite[sprite][0] / 1000;\n      sound._stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running') {\n          playWebAudio();\n        } else {\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Mobile browsers will throw an error if this is called without user interaction.\n          try {\n            node.play();\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the new end timer.\n            if (timeout !== Infinity) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            if (!internal) {\n              self._emit('play', sound._id);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState === 4 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded') {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passsed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i]);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     */\n    _startFadeInterval: function(sound, from, to, len, id) {\n      var self = this;\n      var vol = from;\n      var dir = from > to ? 'out' : 'in';\n      var diff = Math.abs(from - to);\n      var steps = diff / 0.01;\n      var stepLen = (steps > 0) ? len / steps : len;\n\n      // Since browsers clamp timeouts to 4ms, we need to clamp our steps to that too.\n      if (stepLen < 4) {\n        steps = Math.ceil(steps / (4 / stepLen));\n        stepLen = 4;\n      }\n\n      sound._interval = setInterval(function() {\n        // Update the volume amount, but only if the volume should change.\n        if (steps > 0) {\n          vol += (dir === 'in' ? 0.01 : -0.01);\n        }\n\n        // Make sure the volume is in the right bounds.\n        vol = Math.max(0, vol);\n        vol = Math.min(1, vol);\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Change the volume.\n        if (self._webAudio) {\n          if (typeof id === 'undefined') {\n            self._volume = vol;\n          }\n\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded') {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            sound._rateSeek = self.seek(id[i]);\n            sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.value = rate;\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Restart the playback if the sound was playing.\n          if (playing) {\n            self.play(id, true);\n          }\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node) {\n            sound._node.currentTime = seek;\n          }\n\n          self._emit('seek', id);\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n          if (!checkIE) {\n            sounds[i]._node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n          }\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n\n        // Remove the references in the global Howler object.\n        var index = Howler._howls.indexOf(self);\n        if (index >= 0) {\n          Howler._howls.splice(index, 1);\n        }\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function() {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // don't move onto the next task until this one is done\n        self.once(task.event, function() {\n          self._queue.shift();\n          self._loadQueue();\n        });\n\n        task.action();\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        clearTimeout(self._endTimers[id]);\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop;\n      }\n      sound._node.bufferSource.playbackRate.value = sound._rate;\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n\n      if (self._scratchBuffer) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        try { node.bufferSource.buffer = self._scratchBuffer; } catch(e) {}\n      }\n      node.bufferSource = null;\n\n      return self;\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else {\n        self._node = new Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = 'auto';\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.withCredentials = self._xhrWithCredentials;\n      xhr.responseType = 'arraybuffer';\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Decode the buffer into an audio source.\n    Howler.ctx.decodeAudioData(arraybuffer, function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      }\n    }, function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    });\n  };\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && Howler._navigator.standalone && !safari || Howler._navigator && !Howler._navigator.standalone && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.value = Howler._muted ? 0 : 1;\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Define globally in case AMD is not available or unused.\n  if (typeof window !== 'undefined') {\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  } else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.0.5\n *  howlerjs.com\n *\n *  (c) 2013-2017, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n  \n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n      self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n      self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              sound._panner.setPosition(pan, 0, 0);\n            } else {\n              sound._panner.pan.value = pan;\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            sound._panner.setPosition(x, y, z);\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            sound._panner.setOrientation(x, y, z);\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   * \n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n      sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.value = sound._stereo;\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id);\n    }\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/howler/dist/howler.js\n// module id = 6\n// module chunks = 0","/* global Howler */\n\nimport Game from './game.js'\nimport Player from './player'\nimport { Howl } from 'howler'\n\nconst settings = {\n  muted: true,\n  muteBtn: document.querySelector('#mute-control')\n}\n\nHowler.mute(settings.muted)\nconst bgMusic = new Howl({\n  autoplay: true,\n  loop: true,\n  src: './assets/music/bensound-scifi.mp3'\n})\nbgMusic.play()\n\nsettings.muteBtn.addEventListener('click', () => {\n  settings.muted = !settings.muted\n  Howler.mute(settings.muted)\n})\n\nwindow.localStorage.hiScore = window.localStorage.hiScore || 0\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const player = new Player()\n  const game = new Game(player)\n  window.onload = () => {\n    game.run()\n  }\n})\n\n\n\n// WEBPACK FOOTER //\n// ./lib/app.js","import Background from './background'\nimport * as Enemies from './enemies/enemy_ships'\nimport * as Util from './util'\nimport SoundFx from './sound_fx'\nimport Explosion from './explosion'\nimport UI from './ui'\n\nclass Game {\n  constructor (player) {\n    this.bgCanvas = document.querySelector('#background-canvas')\n    this.canvas = document.querySelector('#game-canvas')\n    this.UICanvas = document.querySelector('#ui-canvas')\n    this.canvasContext = this.canvas.getContext('2d')\n    this.bgContext = this.bgCanvas.getContext('2d')\n    this.UIContext = this.UICanvas.getContext('2d')\n    this.scores = {score: 0, hiScore: parseInt(window.localStorage.hiScore)}\n    this.bg = new Background()\n    this.ui = new UI(this.scores)\n    this.player = player\n    this.showTitleScreen = true\n    this.showGameOverScreen = false\n    this.paused = false\n    this.bullets = []\n    this.enemies = []\n    this.explosions = []\n    this.spawnEnemies()\n    Util.addListeners(this)\n  }\n\n  run () {\n    this.render()\n  }\n\n  spawnEnemies () {\n    this.enemies.push(new Enemies.GruntShip({bullets: this.bullets}))\n    this.enemies.push(new Enemies.GruntShip({bullets: this.bullets}))\n    this.enemies.push(new Enemies.GruntShip({bullets: this.bullets}))\n  }\n\n  cleanup () {\n    this.enemies = this.enemies.filter(ship => !ship.cleanup)\n    this.explosions = this.explosions.filter(exp => !exp.cleanup)\n  }\n\n  deleteBullets () {\n    this.bullets = this.bullets.filter(bul => !bul.cleanup)\n    this.enemies.forEach(ship => { ship.bullets = this.bullets })\n  }\n\n  handlePlayerAction () {\n    this.player.playerBullets.forEach(bullet => {\n      bullet.render(this.canvasContext)\n      this.enemies.forEach(ship => {\n        if (Util.checkCollision(ship, bullet)) {\n          this.handleBulletHit(bullet, ship)\n          this.scores.score += 5\n          this.player.deleteBullets()\n        }\n      })\n    })\n  }\n\n  handleBulletHit (bullet, ship) {\n    SoundFx.hit.play()\n    this.explosions.push(new Explosion([bullet.posX,\n      ship.constructor.name === 'Player' ? bullet.posY : bullet.posY - 20]))\n    bullet.destroySelf()\n    this.deleteBullets()\n    ship.hp--\n    if (ship.hp <= 0) {\n      ship.destroySelf()\n      this.cleanup()\n      SoundFx.explosion.play()\n      this.explosions.push(new Explosion([bullet.posX,\n        ship.constructor.name === 'Player' ? bullet.posY : bullet.posY - 20], 64))\n    }\n  }\n\n  clearCanvas () {\n    this.canvasContext.clearRect(0, 0, Util.canvasWidth, Util.canvasHeight)\n  }\n\n  render () {\n    // RENDER LOOP: loop through and render each ship, and then render\n    // each ship's bullets\n    this.bg.render(this.bgContext)\n    this.clearCanvas()\n    if (this.showTitleScreen) {\n      Util.renderTitleScreen(this.canvasContext)\n    } else if (this.showGameOverScreen) {\n\n    } else {\n      this.renderGame()\n    }\n\n    window.requestAnimationFrame(this.render.bind(this))\n  }\n\n  renderGame () {\n    this.enemies.forEach(ship => {\n      ship.render(this.canvasContext)\n    })\n    this.bullets.forEach(bullet => {\n      bullet.render(this.canvasContext)\n      if (Util.checkCollision(bullet, this.player)) {\n        this.handleBulletHit(bullet, this.player)\n      }\n    })\n    this.player.render(this.canvasContext)\n    this.handlePlayerAction()\n    this.explosions.forEach(explosion => explosion.render(this.canvasContext))\n    this.ui.render(this.UIContext)\n  }\n}\n\nexport default Game\n\n\n\n// WEBPACK FOOTER //\n// ./lib/game.js","import MovingObject from './moving_object'\nimport ImageableSingleton from './imageable'\n// import {canvasHeight, canvasWidth} from './util'\n\nclass Background extends MovingObject {\n  constructor () {\n    super({speedY: 2})\n    let images = new ImageableSingleton()\n    this.backgroundImg = images.backgroundImg\n    this.tick = 0\n  }\n\n  render (ctx) {\n    if (this.tick % 2 === 0) {\n      ctx.drawImage(this.backgroundImg, this.posX, this.posY)\n      ctx.drawImage(this.backgroundImg, this.posX, this.posY - this.backgroundImg.height)\n      this.posY += this.speedY\n      this.posY >= this.backgroundImg.height && (this.posY = 0)\n      this.tick > 300 && (this.tick = 0)\n    }\n    this.tick++\n  }\n}\n\nexport default Background\n\n\n\n// WEBPACK FOOTER //\n// ./lib/background.js","import Suicider from './00_suicider'\nimport GruntShip from './01_grunt'\n\nexport {\n  Suicider,\n  GruntShip\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/enemies/enemy_ships.js","import BaseShip from './base'\nimport { BasicEnemyBullet } from '../bullet'\nimport {canvasHeight, canvasWidth} from '../util'\n\n// this ship just suicides into the enemy\nclass Suicider extends BaseShip {\n  constructor (props) {\n    super(props)\n    this.sprite = this.images.enemySuicider\n    this.tickCount = 0\n    this.boundY = Math.floor(Math.random() * 6) * 20\n    this.hitboxW = 16\n    this.hitboxH = 38\n    this.sprites = [\n      [this.sprite, 0, 0, 16, 38],\n      [this.sprite, 16, 0, 16, 38],\n      [this.sprite, 32, 0, 16, 38],\n      [this.sprite, 48, 0, 16, 38]\n    ]\n  }\n  move () {\n  }\n  render (ctx) {\n    this.move()\n    ctx.drawImage(...this.getSprite(), this.posX, this.posY, this.hitboxW, this.hitboxH)\n  }\n  getSprite () {\n    if (this.tickCount >= 40) {\n      this.tickCount = 0\n    }\n    let result = this.sprites[Math.floor(this.tickCount / 10)]\n    this.tickCount++\n    return result\n  }\n}\n\nexport default Suicider\n\n\n\n// WEBPACK FOOTER //\n// ./lib/enemies/00_suicider.js","import BaseShip from './base'\nimport { BasicEnemyBullet } from '../bullet'\nimport {canvasHeight, canvasWidth} from '../util'\nimport SoundFx from '../sound_fx'\n\n// lvl1, weakest enemy ship\nclass GruntShip extends BaseShip {\n  constructor (props) {\n    props = Object.assign({speedX: 2, posY: -100, posX: Math.abs(Math.floor(Math.random() * canvasWidth) - 50)}, props)\n    super(props)\n    this.hp = 10\n    this.sprite = this.images.enemyGrunt\n    this.tickCount = 0\n    this.boundY = Math.floor(Math.random() * 6) * 20\n    this.hitboxW = 48\n    this.hitboxH = 72\n    this.sprites = [\n      [this.sprite, 0, 0, 32, 48],\n      [this.sprite, 32, 0, 32, 48],\n      [this.sprite, 64, 0, 32, 48],\n      [this.sprite, 96, 0, 32, 48]\n    ]\n  }\n\n  move () {\n    if (this.posY < this.boundY) {\n      this.posY += 2\n    } else {\n      if (this.tickCount === 40 && (Math.random() * 2) > 1) {\n        this.fireBullet()\n        // this.deleteBullets()\n      }\n      if (this.posX + this.speedX >= 0 && this.posX + this.speedX <= canvasWidth - this.hitboxW) {\n        this.posX += this.speedX\n      } else {\n        this.antiBumpTechnology()\n      }\n    }\n  }\n\n  fireBullet () {\n    SoundFx.enemyBasicBullet.play()\n    let posObj = {\n      posX: this.posX + Math.floor(this.hitboxW / 2) - 10,\n      posY: this.posY + this.hitboxH - 20\n    }\n    let bulletData = Object.assign({ speedX: 0, speedY: 5 }, posObj)\n    let bulletData2 = Object.assign({ speedX: -3, speedY: 4 }, posObj)\n    let bulletData3 = Object.assign({ speedX: 3, speedY: 4 }, posObj)\n    this.bullets.push(new BasicEnemyBullet(bulletData),\n      new BasicEnemyBullet(bulletData2), new BasicEnemyBullet(bulletData3))\n  }\n\n  render (ctx) {\n    this.move()\n    ctx.drawImage(...this.getSprite(), this.posX, this.posY, this.hitboxW, this.hitboxH)\n  }\n\n  getSprite () {\n    if (this.tickCount >= 40) {\n      this.tickCount = 0\n    }\n    let result = this.sprites[Math.floor(this.tickCount / 10)]\n    this.tickCount++\n    return result\n  }\n}\n\nexport default GruntShip\n\n\n\n// WEBPACK FOOTER //\n// ./lib/enemies/01_grunt.js","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 13\n// module chunks = 0","import ImageableSingleton from './imageable'\n\nclass Explosion {\n  constructor (pos, size = 30) {\n    let images = new ImageableSingleton()\n    this.spriteSheet = images.explosion\n    this.sprites = []\n    this.tickCount = 31\n    for (let i = 0; i <= 192; i += 64) {\n      for (let j = 0; j <= 192; j += 64) {\n        this.sprites.push(\n          [this.spriteSheet, j, i, 64, 64, pos[0], pos[1], size, size]\n        )\n      }\n    }\n    this.sprites = this.sprites.slice(0).reverse().concat(this.sprites)\n  }\n\n  render (ctx) {\n    if (this.tickCount >= 0) {\n      ctx.drawImage(...this.sprites[Math.floor(this.tickCount)])\n      this.tickCount--\n    } else {\n      this.cleanup = true\n    }\n  }\n}\n\nexport default Explosion\n\n\n\n// WEBPACK FOOTER //\n// ./lib/explosion.js","import {canvasHeight, canvasWidth} from './util'\nimport { PlayerBulletBasic } from './bullet'\nimport MovingObject from './moving_object'\nimport SoundFx from './sound_fx'\n\nclass Player extends MovingObject {\n  constructor () {\n    let props = {\n      posX: Math.floor(canvasWidth / 2),\n      posY: Math.floor(canvasHeight / 1.2)\n    }\n    super(props)\n    this.actions = {\n      moveLeft: false,\n      moveRight: false,\n      moveUp: false,\n      moveDown: false,\n      fireBullet: false\n    }\n    this.bulletFx = SoundFx.playerBullet\n    this.topSpeed = 5\n    this.HP = 5\n    this.bulletCooldown = 0\n    this.playerBullets = []\n    this.hitboxW = 30\n    this.hitboxH = 46\n    this.playerController()\n  }\n\n  fireBullet () {\n    let bulletData = {\n      speedX: [-1, 0, 1][Math.floor(Math.random() * 3)],\n      speedY: -10,\n      posX: this.posX + Math.floor(this.hitboxW / 2) - 10,\n      posY: this.posY - 20\n    }\n    let newBullet = new PlayerBulletBasic(bulletData)\n    this.playerBullets.push(newBullet)\n    this.bulletCooldown = 6\n    this.bulletFx.play()\n  }\n\n  calculateInertia () {\n    if (this.actions.moveLeft) {\n      if (Math.abs(this.speedX) < this.topSpeed) {\n        this.speedX--\n      }\n    } else if (this.speedX < 0) {\n      this.speedX++\n    }\n    if (this.actions.moveRight) {\n      if (Math.abs(this.speedX) < this.topSpeed) {\n        this.speedX++\n      }\n    } else if (this.speedX > 0) {\n      this.speedX--\n    }\n    if (this.actions.moveUp) {\n      if (Math.abs(this.speedY) < this.topSpeed) {\n        this.speedY--\n      }\n    } else if (this.speedY < 0) {\n      this.speedY++\n    }\n    if (this.actions.moveDown) {\n      if (Math.abs(this.speedY) < this.topSpeed) {\n        this.speedY++\n      }\n    } else if (this.speedY > 0) {\n      this.speedY--\n    }\n  }\n\n  move () {\n    if (this.actions.fireBullet) {\n      if (this.bulletCooldown === 0) {\n        this.fireBullet()\n      } else {\n        this.bulletCooldown--\n      }\n    }\n    if (this.posX + this.speedX >= 0 && this.posX + this.speedX <= canvasWidth - this.hitboxW) {\n      this.posX += this.speedX\n    }\n    if (this.posY + this.speedY >= 0 && this.posY + this.speedY <= canvasHeight - this.hitboxH) {\n      this.posY += this.speedY\n    }\n  }\n\n  deleteBullets () {\n    this.playerBullets = this.playerBullets.filter(bul => !bul.cleanup)\n  }\n\n  render (ctx) {\n    if (this.bulletCooldown === 0) {\n      this.deleteBullets()\n    }\n    this.calculateInertia()\n    this.move()\n    ctx.drawImage(...this.getSprite())\n  }\n\n  getSprite () {\n    const frame = [0, 1][Math.floor(Math.random() * 2)]\n\n    let normalSprite = [\n      [this.images.playerShip, 0, 0, 32, 44, this.posX, this.posY, this.hitboxW, this.hitboxH],\n      [this.images.playerShip, 32, 0, 32, 44, this.posX, this.posY, this.hitboxW, this.hitboxH]\n    ]\n    let leftSprite = [\n      [this.images.playerShipL, 0, 0, 29, 44, this.posX, this.posY, this.hitboxW, this.hitboxH],\n      [this.images.playerShipL, 29, 0, 29, 44, this.posX, this.posY, this.hitboxW, this.hitboxH]\n    ]\n    let rightSprite = [\n      [this.images.playerShipR, 0, 0, 29, 44, this.posX, this.posY, this.hitboxW, this.hitboxH],\n      [this.images.playerShipR, 29, 0, 29, 44, this.posX, this.posY, this.hitboxW, this.hitboxH]\n    ]\n\n    if (this.speedX === 0) {\n      return normalSprite[frame]\n    } else if (this.speedX < 0) {\n      return leftSprite[frame]\n    } else if (this.speedX > 0) {\n      return rightSprite[frame]\n    }\n  }\n\n  // KEYCODES: 37: left, 38: up, 39: right, 40: down, 32: space\n  playerController () {\n    document.addEventListener('keydown', (e) => {\n      switch (e.keyCode) {\n        case 65:\n        case 37:\n          this.actions.moveLeft = true\n          break\n        case 87:\n        case 38:\n          this.actions.moveUp = true\n          break\n        case 68:\n        case 39:\n          this.actions.moveRight = true\n          break\n        case 83:\n        case 40:\n          this.actions.moveDown = true\n          break\n        case 32:\n          this.actions.fireBullet = true\n          break\n        default:\n          console.log(e.keyCode)\n          break\n      }\n    })\n    document.addEventListener('keyup', (e) => {\n      switch (e.keyCode) {\n        case 65:\n        case 37:\n          this.actions.moveLeft = false\n          break\n        case 87:\n        case 38:\n          this.actions.moveUp = false\n          break\n        case 68:\n        case 39:\n          this.actions.moveRight = false\n          break\n        case 83:\n        case 40:\n          this.actions.moveDown = false\n          break\n        case 32:\n          this.actions.fireBullet = false\n          this.bulletCooldown = 0\n          break\n        default: break\n      }\n    })\n  }\n}\n\nexport default Player\n\n\n\n// WEBPACK FOOTER //\n// ./lib/player.js","import * as Util from './util'\r\n\r\nclass UI {\r\n  constructor (scores) {\r\n    this.scores = scores\r\n    this.tick = 0\r\n  }\r\n\r\n  render (ctx) {\r\n    if (this.tick % 4 === 0) {\r\n      ctx.clearRect(0, 0, Util.canvasWidth, 100)\r\n      ctx.fillStyle = 'white'\r\n      ctx.font = '24px arcadeclassicregular'\r\n      ctx.fillText(`SCORE: ${Util.formatScore(this.scores.score)}`, 40, 30)\r\n      ctx.fillText(`HI: ${Util.formatScore(this.scores.hiScore)}`, 300, 30)\r\n\r\n      if (this.scores.score > this.scores.hiScore) {\r\n        window.localStorage.hiScore = this.scores.score\r\n        this.scores.hiScore = this.scores.score\r\n      }\r\n      this.tick > 300 && (this.tick = 0)\r\n    }\r\n    this.tick++\r\n  }\r\n}\r\n\r\nexport default UI\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ui.js"],"sourceRoot":""}